dat <- as.data.frame(Titanic)
dat$Sex[c(2, 5,13,15,16,23)] <- NA
dat
dat <- rep(as.data.frame(Titanic), 2)
dim(dat)
dat
dat <- as.data.frame(Titanic)[rep(1:nrow(as.data.frame(Titanic)), as.data.frame(Titanic)$Freq), ]
dim(dat)
sum(as.data.frame(Titanic))
sum(as.data.frame(Titanic)$Freq)
head(dat)
dat$Sex[sample(2201, 100)] <- NA
dat$Age[sample(2201, 80)] <- NA
head(dat)
dat
dat$Age[sample(2201, 80)] <- NA
head(dat)
dat$Freq <- NULL
head(dat)
data
data <- data.frame(a=c("a","a","b","b","b"),b=c(1,2,3,3,4),c=c(1,2,NA,NA,1))
data
data$weight=1
aggregate(
formula = as.formula(paste("weight ~",
paste(setdiff(names(data), "weight"),
collapse = "+"))),
data = data,
FUN = sum
)
?aggregate
aggregate(
formula = as.formula(paste("weight ~",
paste(setdiff(names(data), "weight"),
collapse = "+"))),
data = data,
FUN = sum, na.action = na.omit
)
options(na.action)
options("na.action")
?na.exclude
aggregate(
formula = as.formula(paste("weight ~",
paste(setdiff(names(data), "weight"),
collapse = "+"))),
data = data,
FUN = sum, na.action = na.pass
)
data
aggregate(
formula = as.formula(paste("weight ~",
paste(setdiff(names(data), "weight"),
collapse = "+"))),
data = data,
FUN = sum, na.action = na.fail
)
aggregate(
formula = as.formula(paste("weight ~",
paste(setdiff(names(data), "weight"),
collapse = "+"))),
data = data,
FUN = sum, na.action = na.exclude
)
ggplot2::finite.cases
ggplot2::finite.cases.data.frame
library(ggplot2)
finite.cases
finite.cases.data.frame
ggplot2:::finite.cases
ggplot2:::finite.cases.data.frame
is.logical(NA)
TRUE == NA
is.true
is.finite("help")
data
ggplot2:::finite.cases(data)
!is.finite(data$weight)
infinite
c(T,T,T,F) & c(F,F,T,T)
?warning_wrap
?ggplot2:::warning_wrap
?ggplot2::warning_wrap
??warning_wrap
warning_wrap
strwrap
c(T,T,T,F) & F
c(T,T,T,F) & T
test <- 1:5
test[3] <- "NA
test[3] <- "NA"
test
as.character(factor(c("a","b",NA,"d"), levels = letters[1:4]))
factor(letters, levels = c(letters, "a"))
?snake_class
?ggplot2:::snake_class
?ggplot2::snake_class
library(ggalluvial)
ggplot(as.data.frame(Titanic),
aes(weight = Freq, axis1 = Class, axis2 = Sex)) +
geom_alluvium()
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age, axis4 = Survived)) +
geom_alluvium() +
geom_stratum() +
geom_text(stat = "stratum") +
ggtitle("Titanic passenger demographic and survival data") +
theme_bw()
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
fill = Survived)) +
geom_stratum(stat = "alluvium")
devtools::load_all()
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
fill = Survived)) +
geom_stratum(stat = "alluvium")
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
fill = Survived)) +
geom_alluvium() +
geom_stratum(stat = "alluvium")
??desc
dplyr::desc(LETTERS)
identity(LETTERS)
dplyr::desc(c(5,4,7))
negative(5)
negate(5)
Negate(5)
devtools::load_all()
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
color = Survived)) +
stat_stratum(geom = "errorbar") +
geom_line(stat = "flow") +
stat_flow(geom = "pointrange") +
geom_text(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:3,
labels = c("Class", "Sex", "Age"))
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
color = Survived)) +
stat_stratum(geom = "errorbar", reverse = FALSE) +
geom_line(stat = "flow") +
stat_flow(geom = "pointrange") +
geom_text(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:3,
labels = c("Class", "Sex", "Age"))
data <- readRDS("temp.rda")
head(data)
aesthetics <- setdiff(names(data),
c("weight", "PANEL", "group",
"alluvium", "x", "stratum"))
aesthetics
n_ports <- dplyr::n_distinct(data[, c("x", "stratum")])
n_ports
aes_port <- aesthetics[which(sapply(aesthetics, function(x) {
dplyr::n_distinct(data[, c("x", "stratum", x)])
}) > n_ports)]
data$aes <- if (length(aes_port) == 0) {
1
} else {
interaction(data[, rev(aes_port)], drop = TRUE)
}
head(data)
table(data$aes)
aes_port
x_ran <- range(data$x)
data$alluvium <- as.numeric(as.factor(data$alluvium))
alluvium_max <- max(data$alluvium)
data <- dplyr::bind_rows(
transform(dplyr::filter(data, x != x_ran[2]),
alluvium = alluvium + alluvium_max * (as.numeric(x) - 1),
link = as.numeric(x),
side = I("start")),
transform(dplyr::filter(data, x != x_ran[1]),
alluvium = alluvium + alluvium_max * (as.numeric(x) - 2),
link = as.numeric(x) - 1,
side = I("end"))
)
data$side <- factor(data$side, levels = c("start", "end"))
stopifnot(all(table(data$alluvium) == 2))
head(data)
dim(data)
for (var in c("stratum", "aes")) {
data <- match_sides(data, var, paste0("flow_", var))
}
head(data)
data$alluvium <- as.numeric(interaction(data[, c("flow_stratum",
"flow_aes")], drop = TRUE))
group_cols <- setdiff(names(data), c("weight", "group"))
dots <- lapply(group_cols, as.symbol)
data <- as.data.frame(dplyr::summarize(dplyr::group_by_(data, .dots = dots),
weight = sum(weight)))
stopifnot(all(table(data$alluvium) == 2))
data <- transform(data,
group = alluvium)
head(Data)
head(data)
head(merge(data, deposits, all.x = TRUE, all.y = FALSE))
rm(list=ls())
devtools::load_all()
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
color = Survived)) +
stat_stratum(geom = "errorbar") +
geom_line(stat = "flow") +
stat_flow(geom = "pointrange") +
geom_text(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:3,
labels = c("Class", "Sex", "Age"))
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
color = Survived)) +
stat_stratum(geom = "errorbar", reverse = FALSE) +
geom_line(stat = "flow") +
stat_flow(geom = "pointrange", reverse = FALSE) +
geom_text(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:3,
labels = c("Class", "Sex", "Age"))
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
color = Survived)) +
stat_stratum(geom = "errorbar", reverse = FALSE) +
geom_line(stat = "flow") +
stat_flow(geom = "pointrange", reverse = FALSE) +
geom_text(stat = "stratum", label.strata = TRUE, reverse = FALSE) +
scale_x_continuous(breaks = 1:3,
labels = c("Class", "Sex", "Age"))
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age,
fill = Survived)) +
geom_alluvium() +
scale_x_continuous(breaks = 1:3, labels = c("Class", "Sex", "Age"))
ggplot(alluvial::Refugees,
aes(weight = refugees,
x = year, alluvium = country,
fill = country, colour = country)) +
geom_alluvium(width = 1/4, alpha = 2/3, decreasing = FALSE)
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex, axis3 = Age)) +
geom_flow() +
scale_x_continuous(breaks = 1:3, labels = c("Class", "Sex", "Age")) +
geom_stratum() + geom_text(stat = "stratum", label.strata = TRUE) +
ggtitle("Alluvial diagram of Titanic passenger demographic data")
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex)) +
geom_flow(aes(fill = Age)) +
geom_stratum() + geom_text(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:2, labels = c("Class", "Sex")) +
facet_wrap(~ Survived, scales = "fixed")
data(vaccinations)
ggplot(vaccinations,
aes(x = survey, stratum = response, alluvium = subject,
weight = freq, fill = response, label = round(a, 3))) +
geom_lode() + geom_flow() +
geom_stratum(alpha = 0) +
geom_text(stat = "stratum")
ggplot(as.data.frame(Titanic),
aes(weight = Freq,
axis1 = Class, axis2 = Sex)) +
geom_flow(aes(fill = Age)) +
geom_stratum() + geom_text(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:2, labels = c("Class", "Sex")) +
facet_wrap(~ Survived, scales = "fixed")
